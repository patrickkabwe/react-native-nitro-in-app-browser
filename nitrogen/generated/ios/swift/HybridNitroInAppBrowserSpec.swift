///
/// HybridNitroInAppBrowserSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroInAppBrowserSpec``
public protocol HybridNitroInAppBrowserSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func open(url: String, options: NitroInAppBrowserOptions?) throws -> Promise<Void>
  func close() throws -> Promise<Void>
}

/// See ``HybridNitroInAppBrowserSpec``
public class HybridNitroInAppBrowserSpec_base {
  private weak var cxxWrapper: HybridNitroInAppBrowserSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroInAppBrowserSpec_cxx {
  #if DEBUG
    guard self is HybridNitroInAppBrowserSpec else {
      fatalError("`self` is not a `HybridNitroInAppBrowserSpec`! Did you accidentally inherit from `HybridNitroInAppBrowserSpec_base` instead of `HybridNitroInAppBrowserSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroInAppBrowserSpec_cxx(self as! HybridNitroInAppBrowserSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroInAppBrowser HybridObject.
 * Implement this protocol to create Swift-based instances of NitroInAppBrowser.
 * ```swift
 * class HybridNitroInAppBrowser : HybridNitroInAppBrowserSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroInAppBrowserSpec = HybridNitroInAppBrowserSpec_protocol & HybridNitroInAppBrowserSpec_base
