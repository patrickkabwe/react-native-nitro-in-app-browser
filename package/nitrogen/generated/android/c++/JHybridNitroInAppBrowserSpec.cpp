///
/// JHybridNitroInAppBrowserSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "JHybridNitroInAppBrowserSpec.hpp"

// Forward declaration of `NitroInAppBrowserOptions` to properly resolve imports.
namespace margelo::nitro::inappbrowser { struct NitroInAppBrowserOptions; }
// Forward declaration of `NitroInAppBrowserDismissButtonLabel` to properly resolve imports.
namespace margelo::nitro::inappbrowser { enum class NitroInAppBrowserDismissButtonLabel; }

#include <string>
#include <optional>
#include "NitroInAppBrowserOptions.hpp"
#include "JNitroInAppBrowserOptions.hpp"
#include "NitroInAppBrowserDismissButtonLabel.hpp"
#include "JNitroInAppBrowserDismissButtonLabel.hpp"

namespace margelo::nitro::inappbrowser {

  jni::local_ref<JHybridNitroInAppBrowserSpec::jhybriddata> JHybridNitroInAppBrowserSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNitroInAppBrowserSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNitroInAppBrowserSpec::initHybrid),
    });
  }

  size_t JHybridNitroInAppBrowserSpec::getExternalMemorySize() noexcept {
    static const auto method = _javaPart->getClass()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  

  // Methods
  void JHybridNitroInAppBrowserSpec::open(const std::string& url, const std::optional<NitroInAppBrowserOptions>& options) {
    static const auto method = _javaPart->getClass()->getMethod<void(jni::alias_ref<jni::JString> /* url */, jni::alias_ref<JNitroInAppBrowserOptions> /* options */)>("open");
    method(_javaPart, jni::make_jstring(url), options.has_value() ? JNitroInAppBrowserOptions::fromCpp(options.value()) : nullptr);
  }
  void JHybridNitroInAppBrowserSpec::close() {
    static const auto method = _javaPart->getClass()->getMethod<void()>("close");
    method(_javaPart);
  }

} // namespace margelo::nitro::inappbrowser
