///
/// NitroInAppBrowser-Swift-Cxx-Bridge.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `NitroInAppBrowserDismissButtonLabel` to properly resolve imports.
namespace margelo::nitro::inappbrowser { enum class NitroInAppBrowserDismissButtonLabel; }
// Forward declaration of `NitroInAppBrowserOptions` to properly resolve imports.
namespace margelo::nitro::inappbrowser { struct NitroInAppBrowserOptions; }

// Include C++ defined types
#if __has_include("NitroInAppBrowserDismissButtonLabel.hpp")
 #include "NitroInAppBrowserDismissButtonLabel.hpp"
#endif
#if __has_include("NitroInAppBrowserOptions.hpp")
 #include "NitroInAppBrowserOptions.hpp"
#endif
#if __has_include(<optional>)
 #include <optional>
#endif
#if __has_include(<string>)
 #include <string>
#endif

/**
 * Contains specialized versions of C++ templated types so they can be accessed from Swift,
 * as well as helper functions to interact with those C++ types from Swift.
 */
namespace margelo::nitro::inappbrowser::bridge::swift {

  /**
   * Specialized version of `std::optional<NitroInAppBrowserDismissButtonLabel>`.
   */
  using std__optional_NitroInAppBrowserDismissButtonLabel_ = std::optional<NitroInAppBrowserDismissButtonLabel>;
  inline std::optional<NitroInAppBrowserDismissButtonLabel> create_std__optional_NitroInAppBrowserDismissButtonLabel_(const NitroInAppBrowserDismissButtonLabel& value) {
    return std::optional<NitroInAppBrowserDismissButtonLabel>(value);
  }
  
  /**
   * Specialized version of `std::optional<std::string>`.
   */
  using std__optional_std__string_ = std::optional<std::string>;
  inline std::optional<std::string> create_std__optional_std__string_(const std::string& value) {
    return std::optional<std::string>(value);
  }
  
  /**
   * Specialized version of `std::optional<NitroInAppBrowserOptions>`.
   */
  using std__optional_NitroInAppBrowserOptions_ = std::optional<NitroInAppBrowserOptions>;
  inline std::optional<NitroInAppBrowserOptions> create_std__optional_NitroInAppBrowserOptions_(const NitroInAppBrowserOptions& value) {
    return std::optional<NitroInAppBrowserOptions>(value);
  }

} // namespace margelo::nitro::inappbrowser::bridge::swift
